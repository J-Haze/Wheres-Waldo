{"version":3,"sources":["assets/store.jpg","Components/Header.js","Components/LeaderModal.js","Components/SubmitModal.js","Components/Menu.js","Components/placesData.js","Components/PlaceCard.js","Components/Beach.js","Components/Park.js","Components/Store.js","Components/Castle.js","Components/Gold.js","utils/firebase.js","Components/Game.js","App.js","serviceWorker.js","index.js","assets/waldo.png","assets/beach.jpg","assets/theme-park.jpg","assets/castle.jpg","assets/goldrush.jpg"],"names":["module","exports","Header","props","id","src","waldo","time","toFixed","onClick","openLeaderModal","toMenu","LeaderModal","renderLeaderboard","location","className","dispBeachList","dispParkList","dispStoreList","dispCastleList","dispGoldList","hideLeaderModal","event","stopPropagation","SubmitModal","title","hideSubmitModal","placeholder","value","playerName","onChange","e","setPlayerName","target","submitTime","Menu","places","placesData","image","beachPhoto","parkPhoto","storePhoto","castlePhoto","goldPhoto","PlaceCard","play","scores","Beach","isWaldoFound","foundWaldo","Park","Store","Castle","Gold","FirebaseContext","createContext","children","app","apps","length","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Provider","Game","useState","setIsWaldoFound","setTime","timerActive","setTimerActive","leaderModalOpen","setLeaderModalOpen","submitModalOpen","setSubmitModalOpen","update","setUpdate","menuOpen","setMenuOpen","gameStart","setGameStart","setLocation","setTitle","firebase","useContext","beachList","setBeachList","beachRef","firestore","collection","beachQuery","orderBy","limit","parkList","setParkList","parkRef","parkQuery","storeList","setStoreList","storeRef","storeQuery","castleList","setCastleList","castleRef","castleQuery","goldList","setGoldList","goldRef","goldQuery","timeString","rounded","timeDec","filter","badWords","useEffect","get","then","snap","beachPlayers","forEach","player","push","key","data","l","catch","error","console","log","map","name","parkPlayers","storePlayers","castlePlayers","goldPlayers","interval","setInterval","Math","round","clearInterval","a","alert","isProfane","add","place","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.98ee8548.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/store.8fa2b3da.jpg\";","import React from \"react\";\r\nimport \"../App.css\";\r\nimport waldo from \"../assets/waldo.png\"\r\n\r\n\r\nfunction Header(props) {\r\n\r\n    return (\r\n        <div id=\"header\">\r\n            <div id=\"header-container\">\r\n                <div id=\"title\">Where's Waldo?</div>\r\n                <img id=\"head\" src={waldo} />\r\n                <div id=\"time-box\"> Time:\r\n                    <div id=\"time\">{props.time.toFixed(1)}</div>\r\n                </div>\r\n                <div id=\"leaderboard\" onClick={() => { props.openLeaderModal() }}>Leaderboard</div>\r\n                <div id=\"menu\" onClick={props.toMenu}>Menu</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nfunction LeaderModal(props) {\r\n\r\n    let renderLeaderboard = \"\";\r\n    if (props.location == \"beach\") {\r\n        renderLeaderboard =\r\n            (<div className=\"leader-container\">\r\n                <div className=\"leader-title\">Waldo at the Beach</div>\r\n                <div id=\"leaderboard-title\"> Leaderboard: </div>\r\n                <div id=\"leader-list-container\">\r\n                    <ol id=\"beach-list\" className=\"leader-list\">{props.dispBeachList}</ol>\r\n                </div>\r\n            </div>)\r\n    } else if (props.location == \"park\") {\r\n        renderLeaderboard =\r\n            (<div className=\"leader-container\">\r\n                <div className=\"leader-title\">Waldo at the Fair</div>\r\n                <div id=\"leaderboard-title\"> Leaderboard: </div>\r\n                <div id=\"leader-list-container\">\r\n                    <ol id=\"park-list\" className=\"leader-list\">{props.dispParkList}</ol>\r\n                </div>\r\n            </div>)\r\n    } else if (props.location == \"store\") {\r\n        renderLeaderboard =\r\n            (<div className=\"leader-container\">\r\n                <div className=\"leader-title\">Waldo goes Shopping</div>\r\n                <div id=\"leaderboard-title\"> Leaderboard: </div>\r\n                <div id=\"leader-list-container\">\r\n                    <ol id=\"store-list\" className=\"leader-list\">{props.dispStoreList}</ol>\r\n                </div>\r\n            </div>)\r\n    } else if (props.location == \"castle\") {\r\n        renderLeaderboard =\r\n            (<div className=\"leader-container\">\r\n                <div className=\"leader-title\">Renaissance Waldo</div>\r\n                <div id=\"leaderboard-title\"> Leaderboard: </div>\r\n                <div id=\"leader-list-container\">\r\n                    <ol id=\"store-list\" className=\"leader-list\">{props.dispCastleList}</ol>\r\n                </div>\r\n            </div>)\r\n    } else if (props.location == \"gold\") {\r\n        renderLeaderboard =\r\n            (<div className=\"leader-container\">\r\n                <div className=\"leader-title\">Waldo Strikes Gold</div>\r\n                <div id=\"leaderboard-title\"> Leaderboard: </div>\r\n                <div id=\"leader-list-container\">\r\n                    <ol id=\"store-list\" className=\"leader-list\">{props.dispGoldList}</ol>\r\n                </div>\r\n            </div>)\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal\" onClick={() => { props.hideLeaderModal() }}>\r\n            <div id=\"leader-modal\" className=\"modal-content\" onClick={(event) => { event.stopPropagation() }}>\r\n                <span className=\"close\" onClick={() => { props.hideLeaderModal() }}>&times;</span>\r\n                {renderLeaderboard}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default LeaderModal;","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nfunction SubmitModal(props) {\r\n\r\n    let title\r\n    if (props.location == \"beach\") {\r\n        title = \"Waldo at the Beach\"\r\n    } else if (props.location == \"park\") {\r\n        title = \"Waldo at the Fair\"\r\n    } else if (props.location == \"store\") {\r\n        title = \"Waldo goes Shopping\"\r\n    } else if (props.location == \"castle\") {\r\n        title = \"Renaissance Waldo\"\r\n    } else if (props.location == \"gold\") {\r\n        title = \"Waldo Strikes Gold\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div id=\"submit-modal\" className=\"modal-content\" onClick={(event) => { event.stopPropagation() }}>\r\n                <span className=\"close\" onClick={() => { props.hideSubmitModal() }}>&times;</span>\r\n                <div id=\"submit-title\"> {title} </div>\r\n                <div id=\"time-title\">Time: {props.time}</div>\r\n                <input id=\"input\" placeholder=\"Enter Name\" value={props.playerName} onChange={(e) => props.setPlayerName(e.target.value)} />\r\n                <div id=\"submit-time\" onClick={() => { props.submitTime() }}> Submit Score</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubmitModal;","import React from \"react\";\r\nimport \"../App.css\";\r\nimport waldo from \"../assets/waldo.png\";\r\n\r\nfunction Menu(props) {\r\n\r\n    return (\r\n        <div id=\"menu-content\">\r\n            <div id=\"top-row\">\r\n                <div id=\"menu-title\">Where's Waldo?</div>\r\n                <img id=\"menu-head\" src={waldo} />\r\n            </div>\r\n            <div id=\"row-two\"> Created by Justin Hazelton</div>\r\n            <div id=\"all-cards\">{props.places}</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Menu;","import beachPhoto from \"../assets/beach.jpg\";\r\nimport parkPhoto from \"../assets/theme-park.jpg\";\r\nimport castlePhoto from \"../assets/castle.jpg\";\r\nimport goldPhoto from \"../assets/goldrush.jpg\";\r\nimport storePhoto from \"../assets/store.jpg\";\r\n\r\nconst placesData = [\r\n    {\r\n        id: 1,\r\n        title: \"Waldo at the Beach\",\r\n        image: beachPhoto,\r\n        location: \"beach\"\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"Waldo at the Fair\",\r\n        image: parkPhoto,\r\n        location: \"park\"\r\n    },\r\n    {\r\n        id: 3,\r\n        title: \"Waldo goes Shopping\",\r\n        image: storePhoto,\r\n        location: \"store\"\r\n    },\r\n    {\r\n        id: 4,\r\n        title: \"Renaissance Waldo\",\r\n        image: castlePhoto,\r\n        location: \"castle\"\r\n    },\r\n    {\r\n        id: 5,\r\n        title: \"Waldo Strikes Gold\",\r\n        image: goldPhoto,\r\n        location: \"gold\"\r\n    }\r\n\r\n]\r\n\r\nexport default placesData;","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nfunction PlaceCard(props) {\r\n\r\n    return (\r\n        <div id={props.title} className=\"card\">\r\n            <div className=\"card-title\"> {props.title} </div>\r\n            <div className=\"card-buttons\">\r\n                <div className=\"card-play btn\" onClick={() => props.play(props.location)}> Play </div>\r\n                <div className=\"card-scores btn\" onClick={() => props.scores(props.location)}> High Scores </div>\r\n            </div>\r\n            <img className=\"card-image\" src={props.image} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PlaceCard;","import React from \"react\";\r\nimport \"../App.css\";\r\nimport beachPhoto from \"../assets/beach.jpg\";\r\n\r\nfunction Beach(props) {\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"beach-container\" className=\"photo-container\">\r\n                <img id=\"beach-photo\" className=\"photo\" src={beachPhoto} />\r\n                {(props.isWaldoFound && (props.location == \"beach\")) ?\r\n                    <div className=\"waldo-beach found\"></div>\r\n                    :\r\n                    <div className=\"waldo-beach\" onClick={props.foundWaldo}> </div>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Beach;\r\n\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport parkPhoto from \"../assets/theme-park.jpg\";\r\n\r\nfunction Park(props) {\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"park-container\" className=\"photo-container\">\r\n                <img id=\"park-photo\" className=\"photo\" src={parkPhoto} />\r\n                {(props.isWaldoFound && (props.location == \"park\")) ?\r\n                    <div className=\"waldo-park found\"></div>\r\n                    :\r\n                    <div className=\"waldo-park\" onClick={props.foundWaldo}> </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Park;","import React from \"react\";\r\nimport \"../App.css\";\r\nimport storePhoto from \"../assets/store.jpg\";\r\n\r\nfunction Store(props) {\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"store-container\" className=\"photo-container\">\r\n                <img id=\"store-photo\" className=\"photo\" src={storePhoto} />\r\n                {(props.isWaldoFound && (props.location == \"store\")) ?\r\n                    <div className=\"waldo-store found\"></div>\r\n                    :\r\n                    <div className=\"waldo-store\" onClick={props.foundWaldo}> </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Store;","import React from \"react\";\r\nimport \"../App.css\";\r\nimport castlePhoto from \"../assets/castle.jpg\";\r\n\r\nfunction Castle(props) {\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"castle-container\" className=\"photo-container\">\r\n                <img id=\"castle-photo\" className=\"photo\" src={castlePhoto} />\r\n                {(props.isWaldoFound && (props.location == \"castle\")) ?\r\n                    <div className=\"waldo-castle found\"></div>\r\n                    :\r\n                    <div className=\"waldo-castle\" onClick={props.foundWaldo}> </div>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Castle;","import React from \"react\";\r\nimport \"../App.css\";\r\nimport goldPhoto from \"../assets/goldrush.jpg\";\r\n\r\nfunction Gold(props) {\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"gold-container\" className=\"photo-container\">\r\n                <img id=\"gold-photo\" className=\"photo\" src={goldPhoto} />\r\n                {(props.isWaldoFound && (props.location == \"gold\")) ?\r\n                    <div className=\"waldo-gold found\"></div>\r\n                    :\r\n                    <div className=\"waldo-gold\" onClick={props.foundWaldo}> </div>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gold;","import React, { createContext } from 'react'\r\nimport app from 'firebase/app'\r\n\r\nconst FirebaseContext = createContext(null)\r\nexport { FirebaseContext }\r\n\r\nexport default ({ children }) => {\r\n    if (!app.apps.length) {\r\n        app.initializeApp({\r\n            apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n            authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n            databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n            projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n            storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n            messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n            appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n        })\r\n    }\r\n    return (\r\n        <FirebaseContext.Provider value={app}>\r\n            { children}\r\n        </FirebaseContext.Provider>\r\n    )\r\n}","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"../App.css\";\r\nimport Header from \"./Header\";\r\nimport LeaderModal from \"./LeaderModal.js\";\r\nimport SubmitModal from \"./SubmitModal.js\";\r\nimport Menu from \"./Menu.js\";\r\nimport placesData from \"./placesData.js\";\r\nimport PlaceCard from \"./PlaceCard.js\"\r\n\r\nimport Beach from \"./Beach.js\";\r\nimport Park from \"./Park.js\";\r\nimport Store from \"./Store.js\";\r\nimport Castle from \"./Castle.js\";\r\nimport Gold from \"./Gold.js\"\r\n\r\nimport { FirebaseContext } from '../utils/firebase'\r\nimport 'firebase/firestore'\r\n\r\nimport badWords from \"../../node_modules/bad-words\";\r\n\r\nfunction Game() {\r\n    const [isWaldoFound, setIsWaldoFound] = useState(false);\r\n    const [time, setTime] = useState(0);\r\n    const [timerActive, setTimerActive] = useState(false);\r\n    const [playerName, setPlayerName] = useState(\"\");\r\n    const [leaderModalOpen, setLeaderModalOpen] = useState(false);\r\n    const [submitModalOpen, setSubmitModalOpen] = useState(false);\r\n    const [update, setUpdate] = useState(false);\r\n    const [menuOpen, setMenuOpen] = useState(true);\r\n\r\n    const [gameStart, setGameStart] = useState(false);\r\n    const [location, setLocation] = useState(\"beach\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    const [beachList, setBeachList] = useState(null);\r\n    const beachRef = firebase.firestore().collection('beach');\r\n    const beachQuery = beachRef.orderBy(\"time\").limit(5);\r\n\r\n    const [parkList, setParkList] = useState(null);\r\n    const parkRef = firebase.firestore().collection('park');\r\n    const parkQuery = parkRef.orderBy(\"time\").limit(5);\r\n\r\n    const [storeList, setStoreList] = useState(null);\r\n    const storeRef = firebase.firestore().collection('store');\r\n    const storeQuery = storeRef.orderBy(\"time\").limit(5);\r\n\r\n    const [castleList, setCastleList] = useState(null);\r\n    const castleRef = firebase.firestore().collection('castle');\r\n    const castleQuery = castleRef.orderBy(\"time\").limit(5);\r\n\r\n    const [goldList, setGoldList] = useState(null);\r\n    const goldRef = firebase.firestore().collection('gold');\r\n    const goldQuery = goldRef.orderBy(\"time\").limit(5);\r\n\r\n    let timeString = \"\";\r\n    let rounded = \"\";\r\n    let timeDec = \"\";\r\n\r\n    const filter = new badWords();\r\n\r\n    //Retrieve Beach Leaderboard\r\n    useEffect(() => {\r\n        beachQuery.get().then(snap => {\r\n            if (!snap) {\r\n                setBeachList(l => [])\r\n            } else {\r\n                let beachPlayers = []\r\n                snap.forEach(player => {\r\n                    beachPlayers.push({ key: player.id, ...player.data() })\r\n                })\r\n                setBeachList(l => beachPlayers)\r\n            }\r\n        }).catch(error => {\r\n            // Handle the error\r\n            console.log(\"Error: Fetching Leaderboard\")\r\n        })\r\n    }, [update])\r\n\r\n    let dispBeachList;\r\n    if (beachList === null) {\r\n        dispBeachList = (<li>Loading leaderboard...</li>)\r\n    } else if (beachList.length === 0) {\r\n        dispBeachList = (<li>No players yet.</li>)\r\n    } else {\r\n        dispBeachList = beachList.map(player => {\r\n            return (<li key={player.key}><div className=\"item-cont\"><div className=\"list-name\">{player.name}</div><div className=\"list-time\">{player.time}</div></div></li>)\r\n        })\r\n    }\r\n\r\n    //Retrieve Park Leaderboard\r\n    useEffect(() => {\r\n        parkQuery.get().then(snap => {\r\n            if (!snap) {\r\n                setParkList(l => [])\r\n            } else {\r\n                let parkPlayers = []\r\n                snap.forEach(player => {\r\n                    parkPlayers.push({ key: player.id, ...player.data() })\r\n                })\r\n                setParkList(l => parkPlayers)\r\n            }\r\n        }).catch(error => {\r\n            // Handle the error\r\n            console.log(\"Error: Fetching Leaderboard\")\r\n        })\r\n    }, [update])\r\n\r\n    let dispParkList;\r\n    if (parkList === null) {\r\n        dispParkList = (<li>Loading leaderboard...</li>)\r\n    } else if (parkList.length === 0) {\r\n        dispParkList = (<li>No players yet.</li>)\r\n    } else {\r\n        dispParkList = parkList.map(player => {\r\n            return (<li key={player.key}><div className=\"item-cont\"><div className=\"list-name\">{player.name}</div><div className=\"list-time\">{player.time}</div></div></li>)\r\n        })\r\n    }\r\n\r\n    //Retrieve Store Leaderboard\r\n    useEffect(() => {\r\n        storeQuery.get().then(snap => {\r\n            if (!snap) {\r\n                setStoreList(l => [])\r\n            } else {\r\n                let storePlayers = []\r\n                snap.forEach(player => {\r\n                    storePlayers.push({ key: player.id, ...player.data() })\r\n                })\r\n                setStoreList(l => storePlayers)\r\n            }\r\n        }).catch(error => {\r\n            // Handle the error\r\n            console.log(\"Error: Fetching Leaderboard\")\r\n        })\r\n    }, [update])\r\n\r\n    let dispStoreList;\r\n    if (storeList === null) {\r\n        dispStoreList = (<li>Loading leaderboard...</li>)\r\n    } else if (storeList.length === 0) {\r\n        dispStoreList = (<li>No players yet.</li>)\r\n    } else {\r\n        dispStoreList = storeList.map(player => {\r\n            return (<li key={player.key}><div className=\"item-cont\"><div className=\"list-name\">{player.name}</div><div className=\"list-time\">{player.time}</div></div></li>)\r\n        })\r\n    }\r\n\r\n    //Retrieve Castle Leaderboard\r\n    useEffect(() => {\r\n        castleQuery.get().then(snap => {\r\n            if (!snap) {\r\n                setCastleList(l => [])\r\n            } else {\r\n                let castlePlayers = []\r\n                snap.forEach(player => {\r\n                    castlePlayers.push({ key: player.id, ...player.data() })\r\n                })\r\n                setCastleList(l => castlePlayers)\r\n            }\r\n        }).catch(error => {\r\n            // Handle the error\r\n            console.log(\"Error: Fetching Leaderboard\")\r\n        })\r\n    }, [update])\r\n\r\n    let dispCastleList;\r\n    if (castleList === null) {\r\n        dispCastleList = (<li>Loading leaderboard...</li>)\r\n    } else if (castleList.length === 0) {\r\n        dispCastleList = (<li>No players yet.</li>)\r\n    } else {\r\n        dispCastleList = castleList.map(player => {\r\n            return (<li key={player.key}><div className=\"item-cont\"><div className=\"list-name\">{player.name}</div><div className=\"list-time\">{player.time}</div></div></li>)\r\n        })\r\n    }\r\n\r\n    //Retrieve Gold Rush Leaderboard\r\n    useEffect(() => {\r\n        goldQuery.get().then(snap => {\r\n            if (!snap) {\r\n                setGoldList(l => [])\r\n            } else {\r\n                let goldPlayers = []\r\n                snap.forEach(player => {\r\n                    goldPlayers.push({ key: player.id, ...player.data() })\r\n                })\r\n                setGoldList(l => goldPlayers)\r\n            }\r\n        }).catch(error => {\r\n            // Handle the error\r\n            console.log(\"Error: Fetching Leaderboard\")\r\n        })\r\n    }, [update])\r\n\r\n    let dispGoldList;\r\n    if (goldList === null) {\r\n        dispGoldList = (<li>Loading leaderboard...</li>)\r\n    } else if (goldList.length === 0) {\r\n        dispGoldList = (<li>No players yet.</li>)\r\n    } else {\r\n        dispGoldList = goldList.map(player => {\r\n            return (<li key={player.key}><div className=\"item-cont\"><div className=\"list-name\">{player.name}</div><div className=\"list-time\">{player.time}</div></div></li>)\r\n        })\r\n    }\r\n\r\n    function startTimer() {\r\n        setTimerActive(true);\r\n    };\r\n\r\n    function stopTimer() {\r\n        setTimerActive(false);\r\n    };\r\n\r\n    function resetTimer() {\r\n        setTimerActive(false);\r\n        setTime(0)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n        if (timerActive) {\r\n            interval = setInterval(() => {\r\n                setTime((Math.round((time + 0.1) * 10) / 10));\r\n            }, 100);\r\n        } else if (!timerActive && time !== 0) {\r\n            clearInterval(interval);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [timerActive, time]);\r\n\r\n    function foundWaldo() {\r\n        setIsWaldoFound(true);\r\n        stopTimer();\r\n        openSubmitModal();\r\n    }\r\n\r\n    function hideLeaderModal() {\r\n        setLeaderModalOpen(false)\r\n    }\r\n\r\n    function openLeaderModal() {\r\n        setLeaderModalOpen(true)\r\n    }\r\n\r\n    function hideSubmitModal() {\r\n        setSubmitModalOpen(false)\r\n    }\r\n\r\n    function openSubmitModal() {\r\n        setSubmitModalOpen(true)\r\n    }\r\n\r\n    function startGame() {\r\n        setGameStart(true);\r\n        startTimer();\r\n    }\r\n\r\n    const submitTime = async () => {\r\n        if (playerName == \"\") {\r\n            alert(\"Please enter a name\")\r\n            return\r\n        }\r\n\r\n        if (filter.isProfane(playerName)) {\r\n            alert(\"Watch your profanity\")\r\n            setPlayerName(\"\");\r\n            return\r\n        }\r\n\r\n        rounded = Math.round(time * 10) / 10;\r\n        timeDec = rounded.toFixed(1);\r\n        timeString = `${timeDec} sec`;\r\n\r\n        if (location == \"beach\") {\r\n            await beachRef.add({\r\n                time: timeString,\r\n                name: playerName\r\n            });\r\n        }\r\n\r\n        if (location == \"park\") {\r\n            await parkRef.add({\r\n                time: timeString,\r\n                name: playerName\r\n            });\r\n        }\r\n\r\n        if (location == \"store\") {\r\n            await storeRef.add({\r\n                time: timeString,\r\n                name: playerName\r\n            });\r\n        }\r\n\r\n        if (location == \"castle\") {\r\n            await castleRef.add({\r\n                time: timeString,\r\n                name: playerName\r\n            });\r\n        }\r\n\r\n        if (location == \"gold\") {\r\n            await goldRef.add({\r\n                time: timeString,\r\n                name: playerName\r\n            });\r\n        }\r\n\r\n        setPlayerName(\"\");\r\n        setUpdate(!update);\r\n        setSubmitModalOpen(false);\r\n    }\r\n\r\n    function toMenu() {\r\n        resetTimer();\r\n        setIsWaldoFound(false);\r\n        setGameStart(false);\r\n        setMenuOpen(true)\r\n    }\r\n\r\n    function play(location) {\r\n        setLocation(location);\r\n        setMenuOpen(false);\r\n    }\r\n\r\n    function scores(location) {\r\n        setLocation(location);\r\n        openLeaderModal(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (location == \"beach\") {\r\n            setTitle(\"Waldo at the Beach\")\r\n        } else if (location == \"park\") {\r\n            setTitle(\"Waldo at the Fair\")\r\n        } else if (location == \"store\") {\r\n            setTitle(\"Waldo goes Shopping\")\r\n        } else if (location == \"castle\") {\r\n            setTitle(\"Renaissance Waldo\")\r\n        } else if (location == \"gold\") {\r\n            setTitle(\"Waldo Strikes Gold\")\r\n        }\r\n    }, [location]);\r\n\r\n\r\n    const places = placesData.map(place =>\r\n        <PlaceCard\r\n            key={place.id}\r\n            title={place.title}\r\n            image={place.image}\r\n            location={place.location}\r\n            play={play}\r\n            scores={scores}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {leaderModalOpen && <LeaderModal\r\n                location={location}\r\n                hideLeaderModal={hideLeaderModal}\r\n                dispBeachList={dispBeachList}\r\n                dispParkList={dispParkList}\r\n                dispStoreList={dispStoreList}\r\n                dispCastleList={dispCastleList}\r\n                dispGoldList={dispGoldList}\r\n            />}\r\n            {submitModalOpen && <SubmitModal\r\n                time={time}\r\n                hideSubmitModal={hideSubmitModal}\r\n                location={location}\r\n                submitTime={submitTime}\r\n                playerName={playerName}\r\n                setPlayerName={setPlayerName}\r\n            />}\r\n            {menuOpen ?\r\n                <Menu\r\n                    places={places}\r\n                /> :\r\n                <div>\r\n                    <Header\r\n                        time={time}\r\n                        openLeaderModal={openLeaderModal}\r\n                        toMenu={toMenu}\r\n                    />\r\n                    {(!gameStart) ?\r\n                        <div id=\"start-screen\">\r\n                            <div id=\"start-title\">{title}</div>\r\n                            <div className=\"start-button\" onClick={startGame}>Start</div>\r\n                        </div> :\r\n                        (location == \"beach\") ?\r\n                            <Beach\r\n                                isWaldoFound={isWaldoFound}\r\n                                foundWaldo={foundWaldo}\r\n                                location={location}\r\n                            /> :\r\n                            (location == \"store\") ?\r\n                                <Store\r\n                                    isWaldoFound={isWaldoFound}\r\n                                    foundWaldo={foundWaldo}\r\n                                    location={location}\r\n                                /> :\r\n                                (location == \"castle\") ?\r\n                                    <Castle\r\n                                        isWaldoFound={isWaldoFound}\r\n                                        foundWaldo={foundWaldo}\r\n                                        location={location}\r\n                                    /> :\r\n                                    (location == \"gold\") ?\r\n                                        <Gold\r\n                                            isWaldoFound={isWaldoFound}\r\n                                            foundWaldo={foundWaldo}\r\n                                            location={location}\r\n                                        /> :\r\n                                        <Park\r\n                                            isWaldoFound={isWaldoFound}\r\n                                            foundWaldo={foundWaldo}\r\n                                            location={location}\r\n                                        />\r\n                    }\r\n                </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game;","import React from \"react\";\nimport \"./App.css\";\nimport Game from './Components/Game.js'\n\nfunction App() {\n  return (\n    <Game />\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport FirebaseProvider from './utils/firebase.js';\n\n// import * as firebase from 'firebase';\n\n// var firebaseConfig = {\n//   apiKey: \"AIzaSyDmPVWlnNYu82nh4vhq2hMqqmR7mKHAmRc\",\n//   authDomain: \"where-s-waldo-e9b35.firebaseapp.com\",\n//   databaseURL: \"https://where-s-waldo-e9b35.firebaseio.com\",\n//   projectId: \"where-s-waldo-e9b35\",\n//   storageBucket: \"where-s-waldo-e9b35.appspot.com\",\n//   // messagingSenderId: \"21336402984\",\n//   // appId: \"1:21336402984:web:81d3804652e13dc308991d\",\n//   // measurementId: \"G-MEASUREMENT_ID\",\n// };\n// firebase.initializeApp(firebaseConfig);\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(\n  <FirebaseProvider>\n    <App />\n  </FirebaseProvider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/waldo.8adcc90d.png\";","module.exports = __webpack_public_path__ + \"static/media/beach.4f649bce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/theme-park.90bc6714.jpg\";","module.exports = __webpack_public_path__ + \"static/media/castle.dbabf0ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/goldrush.bed23805.jpg\";"],"sourceRoot":""}